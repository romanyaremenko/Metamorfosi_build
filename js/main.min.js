"use strict";

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e5) { throw _e5; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e6) { didErr = true; err = _e6; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var partnersBlock = document.querySelector(".partners");

if (partnersBlock) {
  var e = document.querySelectorAll(".logo-item"),
      t = document.querySelectorAll(".review-item");
  e.forEach(function (c, o) {
    c.addEventListener("click", function () {
      e.forEach(function (e) {
        e.classList.remove("active");
      }), t.forEach(function (e, t) {
        o === t ? (e.classList.add("active"), c.classList.add("active")) : e.classList.remove("active");
      });
    });
  });
}

var swiper = new Swiper(".mySwiper", {
  slidesPerView: 1.2,
  spaceBetween: 10,
  centeredSlides: !0,
  scrollbar: {
    el: ".swiper-scrollbar",
    dragSize: 230
  },
  breakpoints: {
    992: {
      slidesPerView: 3.4,
      spaceBetween: 20,
      centeredSlides: !1
    }
  },
  navigation: {
    nextEl: ".swiper-button-next",
    prevEl: ".swiper-button-prev"
  }
});
var tabs = document.querySelector(".tabs");

if (tabs) {
  var _e = document.querySelectorAll(".radio");

  _e.forEach(function (t) {
    t.addEventListener("click", function () {
      _e.forEach(function (e) {
        e.parentNode.classList.remove("active");
      }), t.parentNode.classList.add("active");
    });
  });
}

var customSelect = document.querySelector(".select");
customSelect && document.querySelectorAll(".select").forEach(function (e) {
  var t = e.querySelector(".select__current");

  if (t) {
    var c = e.querySelector(".select__list"),
        o = e.querySelector(".select__input"),
        r = e.querySelectorAll(".select__item");
    t.addEventListener("click", function () {
      c.classList.toggle("show");
    }), r.forEach(function (e) {
      e.addEventListener("click", function () {
        var c = e.getAttribute("data-value"),
            r = e.textContent;
        o.value = c, t.textContent = r, l();
      });
    });

    var l = function l() {
      c.classList.remove("show");
    };

    document.addEventListener("mouseup", function (t) {
      e.contains(t.target) || l();
    });
  }
}), document.addEventListener("DOMContentLoaded", function () {
  var e = document.querySelector(".cursor__ball--big"),
      t = document.querySelector(".cursor__ball--small"),
      c = document.querySelectorAll(".cursor_activ");
  document.body.addEventListener("mousemove", function (c) {
    TweenMax.to(e, .4, {
      x: c.clientX - 15,
      y: c.clientY - 15
    }), TweenMax.to(t, .1, {
      x: c.clientX - 2,
      y: c.clientY - 2
    });
  });

  for (var _e2 = 0; _e2 < c.length; _e2++) {
    c[_e2].addEventListener("mouseenter", o), c[_e2].addEventListener("mouseleave", r);
  }

  function o() {
    TweenMax.to(e, .3, {
      scale: .5
    });
  }

  function r() {
    TweenMax.to(e, .3, {
      scale: 1
    });
  }
});
var teamBlock = document.querySelector(".team");

if (teamBlock) {
  var _e3 = document.querySelector(".team-popup"),
      _t = document.querySelectorAll(".team-item"),
      c = document.querySelectorAll(".team-popup-item");

  _t.forEach(function (t, o) {
    t.querySelector(".team-item-btn").addEventListener("click", function () {
      c.forEach(function (t, c) {
        o === c && (t.classList.add("active"), _e3.classList.add("active"));
      });
    }), c.forEach(function (t, c) {
      t.querySelector(".close").addEventListener("click", function () {
        t.classList.remove("active"), _e3.classList.remove("active");
      });
    });
  });
}

var vh = .01 * window.innerHeight;
document.documentElement.style.setProperty("--vh", vh + "px"), window.addEventListener("resize", function () {
  var e = .01 * window.innerHeight;
  document.documentElement.style.setProperty("--vh", e + "px");
});
var hamburegBtn = document.querySelector(".hamburger"),
    hamburegOpen = document.querySelector(".hamburger-open"),
    hamburegClose = document.querySelector(".hamburger-close"),
    hamburegMenu = document.querySelector(".hamburger-menu");
hamburegBtn.addEventListener("click", function () {
  hamburegOpen.classList.toggle("active"), hamburegMenu.classList.toggle("active"), hamburegClose.classList.toggle("active"), document.querySelector("body").classList.toggle("hidden");
});
var anchors = document.querySelectorAll('a[href*="#"]');

var _iterator = _createForOfIteratorHelper(anchors),
    _step;

try {
  var _loop = function _loop() {
    var e = _step.value;
    e.addEventListener("click", function (t) {
      t.preventDefault();
      var c = e.getAttribute("href").substr(1);
      document.getElementById(c).scrollIntoView({
        behavior: "smooth",
        block: "start"
      });
    });
  };

  for (_iterator.s(); !(_step = _iterator.n()).done;) {
    _loop();
  }
} catch (err) {
  _iterator.e(err);
} finally {
  _iterator.f();
}

if (window.innerWidth <= 992) {
  var _e4 = document.querySelector(".header"),
      _t2 = 0;

  window.addEventListener("scroll", function () {
    var c = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0;
    c > 200 && c > _t2 ? _e4.classList.add("out") : _e4.classList.remove("out"), _t2 = c;
  });
}